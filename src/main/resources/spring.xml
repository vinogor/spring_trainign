<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="client" class="Client">
        <constructor-arg index="0" value="1"/>
        <constructor-arg index="1" value="John Smith"/>
    </bean>

    <bean id="eventLogger" class="ConsoleEventLogger"/>

    <bean id="event" class="Event" scope="prototype">
        <!-- а это типо внутрений бин! -->
        <constructor-arg>
            <bean class="java.util.Date"/>
        </constructor-arg>

        <constructor-arg ref="dateFormat"/>

        <!-- установление значения поля -->
        <!--<property name="msg" value="привет!" />-->
    </bean>

    <bean id="app" class="App">
        <constructor-arg ref="client"/>
        <!--<constructor-arg ref="eventLogger"/>-->
        <!--<constructor-arg ref="fileLogger"/>-->
        <constructor-arg ref="cachedFileLogger"/>
    </bean>

    <!-- а тут мы юзаем фабричный метод (статический)
    для создания объекта абстрактного класса.
    -->
    <bean id="dateFormat"
          class="java.text.DateFormat"
          factory-method="getDateTimeInstance"
    />

    <bean id="fileLogger" class="FileEventLogger" init-method="init">
        <constructor-arg value="1.txt"/>
    </bean>

    <bean
            id="cachedFileLogger"
            class="CacheFileLogger"
            init-method="init"
            destroy-method="destroy">

        <constructor-arg index="0" value="3.txt"/>
        <constructor-arg index="1" value="3"/>
    </bean>

</beans>